<?xml version="1.0" encoding="UTF-8"?><templates><template autoinsert="true" context="com.rsi.idldt.ui.proeditor.context" deleted="false" description="MGUNIT test case" enabled="true" name="Testcase">; docformat = 'rst'

;+
; Setup before each test is run.
;-
pro ${classname}_ut::setup
  compile_opt strictarr

end


;+
; Cleanup after each test is run.
;-
pro ${classname}_ut::teardown
  compile_opt strictarr

end


;+
; Example test.
;-
function ${classname}_ut::test${cursor}
  compile_opt strictarr

  return, 1
end


;+
; Define instance variables.
;-
pro ${classname}_ut__define
  compile_opt strictarr
  
  define = { ${classname}_ut, inherits MGutTestCase }
end
</template><template autoinsert="true" context="com.rsi.idldt.ui.proeditor.context" deleted="false" description="MGUNIT test suite" enabled="true" name="Testsuite">; docformat = 'rst'

;+
; Initialize object, adding all test cases.
;
; :Returns:
;   1 for success, 0 for failure
;
; :Keywords:
;   _extra : in, optional, type=keywords
;     keywords to `MGutTestSuite::init`
;-
function ${testsuite}_uts::init, _extra=e
  compile_opt strictarr

  if (~self-&gt;mguttestsuite::init(_strict_extra=e)) then return, 0

  self-&gt;add, /all

  return, 1
end


;+
; Define member variables.
;-
pro ${testsuite}_uts__define
  compile_opt strictarr

  define = { ${testsuite}_uts, inherits MGutTestSuite }
end
</template></templates>